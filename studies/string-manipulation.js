// String Manipulation

//   A string is a sequence of characters enclosed within quotes. Its purpose
// is to provide readability for the user/programmer. It is also meant to
// provide context to the data-output generated by a program.

//     One could say that a string is similar to a collection and it is
// manipulated in a similar fashion to other more complex datatypes, 
// specifically arrays. Since it is also defined as a primitive/simple datatype,
// one can manipulate strings in the same fashion as other primitive values. 

// 1. Manipulating Strings with Operators
//     - using the assignment operator : ' = ' 
//             this operator can be used to assign a string to a variable. 
//     - using the addition operator : "  + " 
//             this operator is used in to concatenate more than one string.
//     - one can access specific characters within strings using bracket syntax.

        var noDiggity = "No doubt"; 
        console.log(noDiggity[0]);  //output value will return an 'N'; 
        
//     - strings possess a length property depicting the amount of characters 
//         within, as well as possess several methods. 
        
// 2. Manipulating Strings with Methods
//     - This is a list of methods used to manipulate strings
//       will update as used. 


//      Pure String Methods (methods that do not mutate the given string)

//         .concat() - method used to concatenate several strings
//                     into one string. Returns a new string. 

//         .charAt(index) - method that returns single character from string 
//                          depending on given index.
// 
//         .slice(start,end) - method that returns a set of characters using the 
//                             given index and/or endpoint. 

//         .split(separator) - method that returns an array of smaller strings 
//			       that are split at the point from a given separator. 


//      Impure String Methods (methods that mutate the given string)

//         .replace(what to replace, the string/character to be replaced) 
//                          method that can be used to replace a character     
//                          or word within the string. 
//
//         .toUpperCase() - method that returns string of characters 
//                         to UpperCase.
//
//         .toLowerCase() - method that returns string of characters 
//                         to LowerCase.
        